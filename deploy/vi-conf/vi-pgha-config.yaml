apiVersion: v1
data:
  init: "false"
  vi-dcs-config: |
    postgresql:
      parameters:
        jit: false
        unix_socket_directories: /tmp
        wal_level: logical
        archive_mode: true
        archive_command: source /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-set-env.sh
          && pgbackrest archive-push "%p"
        archive_timeout: 60
        log_directory: pg_log
        shared_buffers: 204MB
        temp_buffers: 8MB
        log_min_duration_statement: 60000
        log_statement: none
        work_mem: 655kB
        max_wal_senders: 6
        shared_preload_libraries: citus,pg_cron,pg_stat_monitor,pgaudit
        timezone: Europe/Moscow
        lc_messages: en_US.utf8
        max_connections: 120
        effective_cache_size: 820MB
        checkpoint_completion_target: 0.9
        wal_buffers: 7864kB
        effective_io_concurrency: 2
        min_wal_size: 1GB
        max_wal_size: 4GB
      use_slots: false
      recovery_conf:
        restore_command: source /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-set-env.sh
          && pgbackrest archive-get %f "%p"
      use_pg_rewind: true
  vi-local-config: |
    postgresql:
      callbacks:
        on_role_change: /opt/crunchy/bin/postgres-ha/callbacks/pgha-on-role-change.sh
      create_replica_methods:
      - pgbackrest
      - basebackup
      pg_hba:
      - local all postgres peer
      - host replication primaryuser 0.0.0.0/0 md5
      - host all primaryuser 0.0.0.0/0 reject
      - host pgdb dev_user 0.0.0.0/0 md5
      - host all all 0.0.0.0/0 md5
      pgbackrest:
        command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh
          replica
        keep_data: true
        no_params: true
      pgbackrest_standby:
        command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh
          standby
        keep_data: true
        no_master: 1
        no_params: true
      pgpass: /tmp/.pgpass
      remove_data_directory_on_rewind_failure: true
      use_unix_socket: true
  vi-repl1-local-config: |
    postgresql:
      callbacks:
        on_role_change: /opt/crunchy/bin/postgres-ha/callbacks/pgha-on-role-change.sh
      create_replica_methods:
      - pgbackrest
      - basebackup
      pg_hba:
      - local all postgres peer
      - host replication primaryuser 0.0.0.0/0 md5
      - host all primaryuser 0.0.0.0/0 reject
      - host pgdb dev_user 0.0.0.0/0 md5
      - host all all 0.0.0.0/0 md5
      pgbackrest:
        command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh
          replica
        keep_data: true
        no_params: true
      pgbackrest_standby:
        command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh
          standby
        keep_data: true
        no_master: 1
        no_params: true
      pgpass: /tmp/.pgpass
      remove_data_directory_on_rewind_failure: true
      use_unix_socket: true
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"init":"false","vi-dcs-config":"postgresql:\n  parameters:\n    jit: false\n    unix_socket_directories: /tmp\n    wal_level: logical\n    archive_mode: true\n    archive_command: source /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-set-env.sh\n      \u0026\u0026 pgbackrest archive-push \"%p\"\n    archive_timeout: 60\n    log_directory: pg_log\n    shared_buffers: 104MB\n    temp_buffers: 8MB\n    log_min_duration_statement: 60000\n    log_statement: none\n    work_mem: 655kB\n    max_wal_senders: 6\n    shared_preload_libraries: citus,pg_cron,pg_stat_monitor,pgaudit\n    timezone: Europe/Moscow\n    lc_messages: en_US.utf8\n    max_connections: 120\n    effective_cache_size: 820MB\n    checkpoint_completion_target: 0.9\n    wal_buffers: 7864kB\n    effective_io_concurrency: 2\n    min_wal_size: 1GB\n    max_wal_size: 4GB\n  use_slots: false\n  recovery_conf:\n    restore_command: source /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-set-env.sh\n      \u0026\u0026 pgbackrest archive-get %f \"%p\"\n  use_pg_rewind: true\n","vi-local-config":"postgresql:\n  callbacks:\n    on_role_change: /opt/crunchy/bin/postgres-ha/callbacks/pgha-on-role-change.sh\n  create_replica_methods:\n  - pgbackrest\n  - basebackup\n  pg_hba:\n  - local all postgres peer\n  - host replication primaryuser 0.0.0.0/0 md5\n  - host all primaryuser 0.0.0.0/0 reject\n  - host pgdb dev_user 0.0.0.0/0 md5\n  - host all all 0.0.0.0/0 md5\n  pgbackrest:\n    command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh\n      replica\n    keep_data: true\n    no_params: true\n  pgbackrest_standby:\n    command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh\n      standby\n    keep_data: true\n    no_master: 1\n    no_params: true\n  pgpass: /tmp/.pgpass\n  remove_data_directory_on_rewind_failure: true\n  use_unix_socket: true\n","vi-repl1-local-config":"postgresql:\n  callbacks:\n    on_role_change: /opt/crunchy/bin/postgres-ha/callbacks/pgha-on-role-change.sh\n  create_replica_methods:\n  - pgbackrest\n  - basebackup\n  pg_hba:\n  - local all postgres peer\n  - host replication primaryuser 0.0.0.0/0 md5\n  - host all primaryuser 0.0.0.0/0 reject\n  - host pgdb dev_user 0.0.0.0/0 md5\n  - host all all 0.0.0.0/0 md5\n  pgbackrest:\n    command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh\n      replica\n    keep_data: true\n    no_params: true\n  pgbackrest_standby:\n    command: /opt/crunchy/bin/postgres-ha/pgbackrest/pgbackrest-create-replica.sh\n      standby\n    keep_data: true\n    no_master: 1\n    no_params: true\n  pgpass: /tmp/.pgpass\n  remove_data_directory_on_rewind_failure: true\n  use_unix_socket: true\n"},"kind":"ConfigMap","metadata":{"annotations":{},"creationTimestamp":"2022-05-16T16:10:49Z","labels":{"pg-cluster":"vi","pgha-config":"true","vendor":"crunchydata"},"name":"vi-pgha-config","namespace":"pgo","resourceVersion":"1057","uid":"9974712b-11ea-45f4-a551-e6ef24b30ca8"}}
  creationTimestamp: "2022-05-16T16:10:49Z"
  labels:
    pg-cluster: vi
    pgha-config: "true"
    vendor: crunchydata
  name: vi-pgha-config
  namespace: pgo
  resourceVersion: "2113"
  uid: 9974712b-11ea-45f4-a551-e6ef24b30ca8
